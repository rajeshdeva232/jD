apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.1"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.cog.justdeploy"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

       /* testOptions {
            unitTests {
                returnDefaultValues true
                all {
                    jvmArgs '-XX:MaxPermSize=256m'
                    if (it.name == 'testDebugUnitTest') {
                        systemProperty 'debug', 'true'
                    }
                }
            }
        }*/
    }
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
    //sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/font'] } }
}
kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:support-v4:27.1.1'

    implementation 'com.github.VyacheslavShmakin:gp-collapsing-toolbar:1.0.1'//collapsingtool bar
    implementation 'de.hdodenhof:circleimageview:2.2.0'//circleimageview
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'//okhttp3
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'//okhttp3
    implementation 'com.android.support:cardview-v7:27.1.1'//cardview
    //Gmail Integration
    implementation 'com.google.android.gms:play-services-auth:11.6.0'
    implementation 'com.google.android.gms:play-services:11.6.0'
    implementation 'com.github.androidquery:androidquery:0.26.9'
    implementation 'com.github.bumptech.glide:glide:3.8.0'//Glide
    implementation 'com.google.code.gson:gson:2.8.0'//Gson
    implementation 'co.metalab.asyncawait:asyncawait:1.0.0'//async
    implementation 'com.android.support:design:27.1.1'//Design
    compile 'com.agrawalsuneet.androidlibs:dotsloader:0.9'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.20"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.20"
    implementation 'com.github.silvestrpredko:dot-progress-bar:1.1'//Loadingbar
    implementation 'com.google.firebase:firebase-auth:11.6.0'
    implementation 'com.github.metagalactic:DotProgressBar:1.0.4'
    implementation 'com.github.orangegangsters:swipy:1.2.3@aar'
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.hbb20:ccp:2.2.0'
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.orhanobut:dialogplus:1.11@aar'//BottomsheetDialog
    implementation 'joda-time:joda-time:2.10'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.json:json:20140107"
    testImplementation 'org.mockito:mockito-core:2.10.0'
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    androidTestImplementation 'com.android.support:support-annotations:27.1.1'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    /*androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'*/
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:3.0.2") {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestUtil 'com.android.support.test:orchestrator:1.0.2-alpha1'
   

    apply plugin: 'com.google.gms.google-services'
    repositories {
        mavenCentral()
    }
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.2@aar') {
        transitive = true;
    }
}


